// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Mux16(a=preOut, b=false, sel=reset, out=out1);
    // Mux16(a=out1, b=in, sel=load, out=out2);
    // Inc16(in=out2, out=out3);
    // Mux16(a=out2, b=out3, sel=inc, out=out4);
    // Mux16(a=out4, b=out2, sel=load, out=out5);
    // Mux16(a=out5, b=out1, sel=reset, out=out6);
    // Register(in=out6, load=true, out=out, out=preOut);
    // 这个方式虽然实现了, 但是有点饶


    Mux16(a = preOut, b = addOut, sel = inc, out = o1);

    Mux16(a = o1, b = in, sel = load, out = o2);

    Mux16(a = o2, b = false, sel = reset, out = o3);

    Register(in = o3, load = true, out = preOut, out = out);

    Inc16(in = preOut, out = addOut);

}
